CCS PCM C Compiler, Version 5.015, 5967               16-mar.-22 10:08

               Filename:   C:\Users\donke\OneDrive\Escritorio\Micro c\2_Habilitar Salidas_002\Programa\Salida2.lst

               ROM used:   64 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16f877a.h>      
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS, NOWDT, NOPUT, NOLVP, NOPROTECT, BROWNOUT 
.................... #use delay(clock=20M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... #use fast_io(B) 
....................  
.................... void main () 
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  BSF    03.5
001C:  BSF    1F.0
001D:  BSF    1F.1
001E:  BSF    1F.2
001F:  BCF    1F.3
0020:  MOVLW  07
0021:  MOVWF  1C
0022:  BCF    03.7
.................... { 
....................    // Lo que se declare antes del While solo se realiza una vez 
....................    set_tris_b(0b00000000);   //instruccion para utilizar fast_io 
0023:  MOVLW  00
0024:  MOVWF  06
....................    output_b(0b00000000);  // se declara el puerto B en cero al energizar el PIC 
0025:  BCF    03.5
0026:  CLRF   06
....................        
....................       while(true) //ciclo infinito, lo que se declare se repitara una y otra vez 
....................       { 
....................          output_high(PIN_B0); //esta instruccion permite poner a B0 en 1 
0027:  BSF    06.0
....................          output_low(PIN_B1);//esta instruccion permite poner a B1 en 0 
0028:  BCF    06.1
....................          output_high(PIN_B2); //esta instruccion permite poner a B0 en 1 
0029:  BSF    06.2
....................          output_low(PIN_B1); 
002A:  BCF    06.1
....................          output_low(PIN_B3); 
002B:  BCF    06.3
....................          delay_ms(1000);  //esta instruccion permite un retardo de 1000 mili segundos o 1 segundo 
002C:  MOVLW  04
002D:  MOVWF  21
002E:  MOVLW  FA
002F:  MOVWF  22
0030:  CALL   004
0031:  DECFSZ 21,F
0032:  GOTO   02E
....................          output_low(PIN_B2); 
0033:  BCF    06.2
....................          output_low(PIN_B0); 
0034:  BCF    06.0
....................          output_high(PIN_B1); 
0035:  BSF    06.1
....................          output_high(PIN_B3); 
0036:  BSF    06.3
....................          delay_ms(1000); 
0037:  MOVLW  04
0038:  MOVWF  21
0039:  MOVLW  FA
003A:  MOVWF  22
003B:  CALL   004
003C:  DECFSZ 21,F
003D:  GOTO   039
003E:  GOTO   027
....................       } 
.................... } 
....................  
003F:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
